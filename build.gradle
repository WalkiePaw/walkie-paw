plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// mysql jdbc connector
	implementation 'mysql:mysql-connector-java:8.0.32'
	// mysql geo point lib
	implementation 'org.locationtech.jts:jts-io:1.19.0'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	implementation 'org.orbisgis:h2gis:1.5.0'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// AWS S3
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.750'

	// https://mvnrepository.com/artifact/org.springframework/spring-webflux
	implementation 'org.springframework:spring-webflux:6.1.10'

	//Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// JWT
	implementation 'com.auth0:java-jwt:4.4.0'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// WebSocket
	implementation 'org.springframework:spring-websocket'

	//
//	implementation 'jakarta.annotation:jakarta.annotation-api:3.0.0'

}

// 여러 로깅을 하나에서 사용하게 해주는??? 경고가 자꾸 발생해서 추가
//configurations.all {
//	exclude group: 'commons-logging', module: 'commons-logging'
//}

clean {
	delete file('src/main/generated')
}


tasks.named('test') {
	useJUnitPlatform()
}
